"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSize = exports.initTheme = void 0;
var core_1 = require("@emotion/core");
var styled_1 = __importDefault(require("@emotion/styled"));
var initTheme = function (theme) {
    return __assign({ mode: 'light', searchbarHeight: 42, smallSearchbarHeight: 35, 
        // bump the condensedMediaQuery to force if condensedMode is true
        condensedMediaQuery: (theme === null || theme === void 0 ? void 0 : theme.condensedMode) ? "max-width: 99999px" : "max-width: 480px" }, theme);
};
exports.initTheme = initTheme;
// DRY but kinda ugly
var getSize = function (theme, includeWidth) {
    if (includeWidth === void 0) { includeWidth = false; }
    return core_1.css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    height: ", "px;\n    ", ";\n    @media (", ") {\n        height: ", "px;\n        ", ";\n    }\n"], ["\n    height: ", "px;\n    ", ";\n    @media (", ") {\n        height: ", "px;\n        ", ";\n    }\n"])), theme.searchbarHeight, includeWidth && core_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n        width: ", "px;\n    "], ["\n        width: ", "px;\n    "])), theme.searchbarHeight), theme.condensedMediaQuery, theme.smallSearchbarHeight, includeWidth && core_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n            width: ", "px;\n        "], ["\n            width: ", "px;\n        "])), theme.smallSearchbarHeight));
};
exports.getSize = getSize;
exports.default = styled_1.default;
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=theme.js.map